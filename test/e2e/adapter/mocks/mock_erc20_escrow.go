// Code generated by MockGen. DO NOT EDIT.
// Source: erc20_escrow_wrapper.go

// Package mocks is a generated GoMock package.
package mocks

import (
	big "math/big"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	common "github.com/klaytn/klaytn/common"
)

// MockIErc20EscrowManager is a mock of IErc20EscrowManager interface
type MockIErc20EscrowManager struct {
	ctrl     *gomock.Controller
	recorder *MockIErc20EscrowManagerMockRecorder
}

// MockIErc20EscrowManagerMockRecorder is the mock recorder for MockIErc20EscrowManager
type MockIErc20EscrowManagerMockRecorder struct {
	mock *MockIErc20EscrowManager
}

// NewMockIErc20EscrowManager creates a new mock instance
func NewMockIErc20EscrowManager(ctrl *gomock.Controller) *MockIErc20EscrowManager {
	mock := &MockIErc20EscrowManager{ctrl: ctrl}
	mock.recorder = &MockIErc20EscrowManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIErc20EscrowManager) EXPECT() *MockIErc20EscrowManagerMockRecorder {
	return m.recorder
}

// Address mocks base method
func (m *MockIErc20EscrowManager) Address() common.Address {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Address")
	ret0, _ := ret[0].(common.Address)
	return ret0
}

// Address indicates an expected call of Address
func (mr *MockIErc20EscrowManagerMockRecorder) Address() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Address", reflect.TypeOf((*MockIErc20EscrowManager)(nil).Address))
}

// TxHash mocks base method
func (m *MockIErc20EscrowManager) TxHash() common.Hash {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TxHash")
	ret0, _ := ret[0].(common.Hash)
	return ret0
}

// TxHash indicates an expected call of TxHash
func (mr *MockIErc20EscrowManagerMockRecorder) TxHash() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TxHash", reflect.TypeOf((*MockIErc20EscrowManager)(nil).TxHash))
}

// CreatedAt mocks base method
func (m *MockIErc20EscrowManager) CreatedAt() *big.Int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatedAt")
	ret0, _ := ret[0].(*big.Int)
	return ret0
}

// CreatedAt indicates an expected call of CreatedAt
func (mr *MockIErc20EscrowManagerMockRecorder) CreatedAt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatedAt", reflect.TypeOf((*MockIErc20EscrowManager)(nil).CreatedAt))
}

// MockIErc20EscrowCalls is a mock of IErc20EscrowCalls interface
type MockIErc20EscrowCalls struct {
	ctrl     *gomock.Controller
	recorder *MockIErc20EscrowCallsMockRecorder
}

// MockIErc20EscrowCallsMockRecorder is the mock recorder for MockIErc20EscrowCalls
type MockIErc20EscrowCallsMockRecorder struct {
	mock *MockIErc20EscrowCalls
}

// NewMockIErc20EscrowCalls creates a new mock instance
func NewMockIErc20EscrowCalls(ctrl *gomock.Controller) *MockIErc20EscrowCalls {
	mock := &MockIErc20EscrowCalls{ctrl: ctrl}
	mock.recorder = &MockIErc20EscrowCallsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIErc20EscrowCalls) EXPECT() *MockIErc20EscrowCallsMockRecorder {
	return m.recorder
}

// MockIErc20EscrowTransacts is a mock of IErc20EscrowTransacts interface
type MockIErc20EscrowTransacts struct {
	ctrl     *gomock.Controller
	recorder *MockIErc20EscrowTransactsMockRecorder
}

// MockIErc20EscrowTransactsMockRecorder is the mock recorder for MockIErc20EscrowTransacts
type MockIErc20EscrowTransactsMockRecorder struct {
	mock *MockIErc20EscrowTransacts
}

// NewMockIErc20EscrowTransacts creates a new mock instance
func NewMockIErc20EscrowTransacts(ctrl *gomock.Controller) *MockIErc20EscrowTransacts {
	mock := &MockIErc20EscrowTransacts{ctrl: ctrl}
	mock.recorder = &MockIErc20EscrowTransactsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIErc20EscrowTransacts) EXPECT() *MockIErc20EscrowTransactsMockRecorder {
	return m.recorder
}

// MockIErc20EscrowEvents is a mock of IErc20EscrowEvents interface
type MockIErc20EscrowEvents struct {
	ctrl     *gomock.Controller
	recorder *MockIErc20EscrowEventsMockRecorder
}

// MockIErc20EscrowEventsMockRecorder is the mock recorder for MockIErc20EscrowEvents
type MockIErc20EscrowEventsMockRecorder struct {
	mock *MockIErc20EscrowEvents
}

// NewMockIErc20EscrowEvents creates a new mock instance
func NewMockIErc20EscrowEvents(ctrl *gomock.Controller) *MockIErc20EscrowEvents {
	mock := &MockIErc20EscrowEvents{ctrl: ctrl}
	mock.recorder = &MockIErc20EscrowEventsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIErc20EscrowEvents) EXPECT() *MockIErc20EscrowEventsMockRecorder {
	return m.recorder
}

// MockIErc20EscrowFilterer is a mock of IErc20EscrowFilterer interface
type MockIErc20EscrowFilterer struct {
	ctrl     *gomock.Controller
	recorder *MockIErc20EscrowFiltererMockRecorder
}

// MockIErc20EscrowFiltererMockRecorder is the mock recorder for MockIErc20EscrowFilterer
type MockIErc20EscrowFiltererMockRecorder struct {
	mock *MockIErc20EscrowFilterer
}

// NewMockIErc20EscrowFilterer creates a new mock instance
func NewMockIErc20EscrowFilterer(ctrl *gomock.Controller) *MockIErc20EscrowFilterer {
	mock := &MockIErc20EscrowFilterer{ctrl: ctrl}
	mock.recorder = &MockIErc20EscrowFiltererMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIErc20EscrowFilterer) EXPECT() *MockIErc20EscrowFiltererMockRecorder {
	return m.recorder
}

// MockIErc20EscrowParser is a mock of IErc20EscrowParser interface
type MockIErc20EscrowParser struct {
	ctrl     *gomock.Controller
	recorder *MockIErc20EscrowParserMockRecorder
}

// MockIErc20EscrowParserMockRecorder is the mock recorder for MockIErc20EscrowParser
type MockIErc20EscrowParserMockRecorder struct {
	mock *MockIErc20EscrowParser
}

// NewMockIErc20EscrowParser creates a new mock instance
func NewMockIErc20EscrowParser(ctrl *gomock.Controller) *MockIErc20EscrowParser {
	mock := &MockIErc20EscrowParser{ctrl: ctrl}
	mock.recorder = &MockIErc20EscrowParserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIErc20EscrowParser) EXPECT() *MockIErc20EscrowParserMockRecorder {
	return m.recorder
}

// MockIErc20EscrowWatcher is a mock of IErc20EscrowWatcher interface
type MockIErc20EscrowWatcher struct {
	ctrl     *gomock.Controller
	recorder *MockIErc20EscrowWatcherMockRecorder
}

// MockIErc20EscrowWatcherMockRecorder is the mock recorder for MockIErc20EscrowWatcher
type MockIErc20EscrowWatcherMockRecorder struct {
	mock *MockIErc20EscrowWatcher
}

// NewMockIErc20EscrowWatcher creates a new mock instance
func NewMockIErc20EscrowWatcher(ctrl *gomock.Controller) *MockIErc20EscrowWatcher {
	mock := &MockIErc20EscrowWatcher{ctrl: ctrl}
	mock.recorder = &MockIErc20EscrowWatcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIErc20EscrowWatcher) EXPECT() *MockIErc20EscrowWatcherMockRecorder {
	return m.recorder
}

// MockIErc20EscrowContract is a mock of IErc20EscrowContract interface
type MockIErc20EscrowContract struct {
	ctrl     *gomock.Controller
	recorder *MockIErc20EscrowContractMockRecorder
}

// MockIErc20EscrowContractMockRecorder is the mock recorder for MockIErc20EscrowContract
type MockIErc20EscrowContractMockRecorder struct {
	mock *MockIErc20EscrowContract
}

// NewMockIErc20EscrowContract creates a new mock instance
func NewMockIErc20EscrowContract(ctrl *gomock.Controller) *MockIErc20EscrowContract {
	mock := &MockIErc20EscrowContract{ctrl: ctrl}
	mock.recorder = &MockIErc20EscrowContractMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIErc20EscrowContract) EXPECT() *MockIErc20EscrowContractMockRecorder {
	return m.recorder
}

// Address mocks base method
func (m *MockIErc20EscrowContract) Address() common.Address {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Address")
	ret0, _ := ret[0].(common.Address)
	return ret0
}

// Address indicates an expected call of Address
func (mr *MockIErc20EscrowContractMockRecorder) Address() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Address", reflect.TypeOf((*MockIErc20EscrowContract)(nil).Address))
}

// TxHash mocks base method
func (m *MockIErc20EscrowContract) TxHash() common.Hash {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TxHash")
	ret0, _ := ret[0].(common.Hash)
	return ret0
}

// TxHash indicates an expected call of TxHash
func (mr *MockIErc20EscrowContractMockRecorder) TxHash() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TxHash", reflect.TypeOf((*MockIErc20EscrowContract)(nil).TxHash))
}

// CreatedAt mocks base method
func (m *MockIErc20EscrowContract) CreatedAt() *big.Int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatedAt")
	ret0, _ := ret[0].(*big.Int)
	return ret0
}

// CreatedAt indicates an expected call of CreatedAt
func (mr *MockIErc20EscrowContractMockRecorder) CreatedAt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatedAt", reflect.TypeOf((*MockIErc20EscrowContract)(nil).CreatedAt))
}
