syntax = "proto3";
package airbloc.rpc.v1;

option go_package = "github.com/airbloc/airbloc-go/proto/rpc/v1/server";

import "google/protobuf/empty.proto";

service Exchange {
    rpc Prepare (OrderRequest) returns (OfferId);
    rpc AddDataIds (DataIds) returns (google.protobuf.Empty);
    rpc Order (OfferId) returns (google.protobuf.Empty);
    rpc Settle (OfferId) returns (Receipt);
    rpc Reject (OfferId) returns (google.protobuf.Empty);

    rpc GetOffer (OfferId) returns (Offer);
    rpc GetOfferCompact (OfferId) returns (OfferCompact);
    rpc GetReceiptsByOfferor (ReceiptRequest) returns (Offers);
    rpc GetReceiptsByOfferee (ReceiptRequest) returns (Offers);
    rpc GetReceiptsByEscrow (ReceiptRequest) returns (Offers);
}

enum Status {
    UNDEFINED = 0;
    NEUTRAL = 1;
    PENDING = 2;
    SETTLED = 3;
    REJECTED = 4;
    OPENED = 5;
    CLOSED = 6;
}

message RichardianContract {
    string hash = 1; // Hash
}

message SmartContract {
    string address = 1; // Address
    bytes escrowSign = 2; // [4]byte
    bytes escrowArgs = 3; // []byte
}

message Contract {
    enum Type {
        RICHARDIAN = 0;
        SMART = 1;
    }
    Type type = 1;
    SmartContract smartEscrow = 2;
    RichardianContract richarEscrow = 3;
}

message Receipt {
    string offerId = 1; // ID
    string from = 2; // Address
    string to = 3; // Address
}
message ReceiptRequest {
    string address = 1; // Address
}

message OrderRequest {
    string to = 1; // Address
    Contract contract = 2;
    repeated string dataIds = 3; // ID
}

message Offer {
    string from = 1; // Address
    string to = 2; // Address
    repeated string dataIds = 3; // ID
    Contract contract = 4;
    Status status = 5;
    bool reverted = 6;
}
message OfferCompact {
    string from = 1; // Address
    string to = 2; // Address
    // TODO : richardian contract support
    string escrow = 3; // Address
    bool reverted = 4;
}
message Offers {
    repeated string offerIds = 1;
}

message OfferId {
    string offerId = 1; // ID
}

message DataIds {
    string offerId = 1; // ID
    repeated string dataIds = 2; // ID
}


