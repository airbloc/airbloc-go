// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/rpc/v1/server/dauth.proto

package server

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SignInRequest struct {
	// Identity information (e.g. Email, Phone Number)
	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// An address of the user delegate.
	UserDelegate         string   `protobuf:"bytes,2,opt,name=userDelegate,proto3" json:"userDelegate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInRequest) Reset()         { *m = SignInRequest{} }
func (m *SignInRequest) String() string { return proto.CompactTextString(m) }
func (*SignInRequest) ProtoMessage()    {}
func (*SignInRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_66cc8b72c8d7fd76, []int{0}
}

func (m *SignInRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInRequest.Unmarshal(m, b)
}
func (m *SignInRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInRequest.Marshal(b, m, deterministic)
}
func (m *SignInRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInRequest.Merge(m, src)
}
func (m *SignInRequest) XXX_Size() int {
	return xxx_messageInfo_SignInRequest.Size(m)
}
func (m *SignInRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignInRequest proto.InternalMessageInfo

func (m *SignInRequest) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *SignInRequest) GetUserDelegate() string {
	if m != nil {
		return m.UserDelegate
	}
	return ""
}

type SignInResponse struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInResponse) Reset()         { *m = SignInResponse{} }
func (m *SignInResponse) String() string { return proto.CompactTextString(m) }
func (*SignInResponse) ProtoMessage()    {}
func (*SignInResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_66cc8b72c8d7fd76, []int{1}
}

func (m *SignInResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInResponse.Unmarshal(m, b)
}
func (m *SignInResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInResponse.Marshal(b, m, deterministic)
}
func (m *SignInResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInResponse.Merge(m, src)
}
func (m *SignInResponse) XXX_Size() int {
	return xxx_messageInfo_SignInResponse.Size(m)
}
func (m *SignInResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignInResponse proto.InternalMessageInfo

func (m *SignInResponse) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type DAuthRequest struct {
	// Collection (Data Type) ID the user want to authorize
	CollectionId string `protobuf:"bytes,1,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	// ID of the user.
	AccountId            string   `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DAuthRequest) Reset()         { *m = DAuthRequest{} }
func (m *DAuthRequest) String() string { return proto.CompactTextString(m) }
func (*DAuthRequest) ProtoMessage()    {}
func (*DAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_66cc8b72c8d7fd76, []int{2}
}

func (m *DAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DAuthRequest.Unmarshal(m, b)
}
func (m *DAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DAuthRequest.Marshal(b, m, deterministic)
}
func (m *DAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DAuthRequest.Merge(m, src)
}
func (m *DAuthRequest) XXX_Size() int {
	return xxx_messageInfo_DAuthRequest.Size(m)
}
func (m *DAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DAuthRequest proto.InternalMessageInfo

func (m *DAuthRequest) GetCollectionId() string {
	if m != nil {
		return m.CollectionId
	}
	return ""
}

func (m *DAuthRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type GetAuthorizationsRequest struct {
	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// your app ID. @exclude TODO: Temporary
	AppId                string   `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAuthorizationsRequest) Reset()         { *m = GetAuthorizationsRequest{} }
func (m *GetAuthorizationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAuthorizationsRequest) ProtoMessage()    {}
func (*GetAuthorizationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_66cc8b72c8d7fd76, []int{3}
}

func (m *GetAuthorizationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuthorizationsRequest.Unmarshal(m, b)
}
func (m *GetAuthorizationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuthorizationsRequest.Marshal(b, m, deterministic)
}
func (m *GetAuthorizationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthorizationsRequest.Merge(m, src)
}
func (m *GetAuthorizationsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAuthorizationsRequest.Size(m)
}
func (m *GetAuthorizationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthorizationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthorizationsRequest proto.InternalMessageInfo

func (m *GetAuthorizationsRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *GetAuthorizationsRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

type GetAuthorizationsResponse struct {
	// true if the user has been done DAuth to given app at least one time.
	HasAuthorizedBefore bool `protobuf:"varint,1,opt,name=hasAuthorizedBefore,proto3" json:"hasAuthorizedBefore,omitempty"`
	// list of the authorization settings of the user to the app.
	Authorizations       []*GetAuthorizationsResponse_Authorization `protobuf:"bytes,2,rep,name=authorizations,proto3" json:"authorizations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *GetAuthorizationsResponse) Reset()         { *m = GetAuthorizationsResponse{} }
func (m *GetAuthorizationsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAuthorizationsResponse) ProtoMessage()    {}
func (*GetAuthorizationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_66cc8b72c8d7fd76, []int{4}
}

func (m *GetAuthorizationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuthorizationsResponse.Unmarshal(m, b)
}
func (m *GetAuthorizationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuthorizationsResponse.Marshal(b, m, deterministic)
}
func (m *GetAuthorizationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthorizationsResponse.Merge(m, src)
}
func (m *GetAuthorizationsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAuthorizationsResponse.Size(m)
}
func (m *GetAuthorizationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthorizationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthorizationsResponse proto.InternalMessageInfo

func (m *GetAuthorizationsResponse) GetHasAuthorizedBefore() bool {
	if m != nil {
		return m.HasAuthorizedBefore
	}
	return false
}

func (m *GetAuthorizationsResponse) GetAuthorizations() []*GetAuthorizationsResponse_Authorization {
	if m != nil {
		return m.Authorizations
	}
	return nil
}

type GetAuthorizationsResponse_Authorization struct {
	CollectionId         string   `protobuf:"bytes,1,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	Authorized           bool     `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAuthorizationsResponse_Authorization) Reset() {
	*m = GetAuthorizationsResponse_Authorization{}
}
func (m *GetAuthorizationsResponse_Authorization) String() string { return proto.CompactTextString(m) }
func (*GetAuthorizationsResponse_Authorization) ProtoMessage()    {}
func (*GetAuthorizationsResponse_Authorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_66cc8b72c8d7fd76, []int{4, 0}
}

func (m *GetAuthorizationsResponse_Authorization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuthorizationsResponse_Authorization.Unmarshal(m, b)
}
func (m *GetAuthorizationsResponse_Authorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuthorizationsResponse_Authorization.Marshal(b, m, deterministic)
}
func (m *GetAuthorizationsResponse_Authorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthorizationsResponse_Authorization.Merge(m, src)
}
func (m *GetAuthorizationsResponse_Authorization) XXX_Size() int {
	return xxx_messageInfo_GetAuthorizationsResponse_Authorization.Size(m)
}
func (m *GetAuthorizationsResponse_Authorization) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthorizationsResponse_Authorization.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthorizationsResponse_Authorization proto.InternalMessageInfo

func (m *GetAuthorizationsResponse_Authorization) GetCollectionId() string {
	if m != nil {
		return m.CollectionId
	}
	return ""
}

func (m *GetAuthorizationsResponse_Authorization) GetAuthorized() bool {
	if m != nil {
		return m.Authorized
	}
	return false
}

func init() {
	proto.RegisterType((*SignInRequest)(nil), "airbloc.rpc.v1.SignInRequest")
	proto.RegisterType((*SignInResponse)(nil), "airbloc.rpc.v1.SignInResponse")
	proto.RegisterType((*DAuthRequest)(nil), "airbloc.rpc.v1.DAuthRequest")
	proto.RegisterType((*GetAuthorizationsRequest)(nil), "airbloc.rpc.v1.GetAuthorizationsRequest")
	proto.RegisterType((*GetAuthorizationsResponse)(nil), "airbloc.rpc.v1.GetAuthorizationsResponse")
	proto.RegisterType((*GetAuthorizationsResponse_Authorization)(nil), "airbloc.rpc.v1.GetAuthorizationsResponse.Authorization")
}

func init() { proto.RegisterFile("proto/rpc/v1/server/dauth.proto", fileDescriptor_66cc8b72c8d7fd76) }

var fileDescriptor_66cc8b72c8d7fd76 = []byte{
	// 505 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0xc7, 0x95, 0xf4, 0x97, 0x2a, 0x99, 0xa6, 0xd1, 0xaf, 0xcb, 0x1f, 0x05, 0x37, 0x0d, 0xd5,
	0x72, 0x49, 0x2b, 0xb1, 0x4b, 0xda, 0x03, 0x52, 0x6f, 0xad, 0x82, 0x50, 0x2f, 0x80, 0xd2, 0x1b,
	0x17, 0xb4, 0xb1, 0x27, 0xf6, 0x4a, 0xee, 0xae, 0xb1, 0xd7, 0x41, 0xa1, 0xe2, 0x02, 0x8f, 0xc0,
	0xeb, 0xf0, 0x16, 0xbc, 0x02, 0x0f, 0x82, 0xbc, 0x8e, 0xdd, 0x38, 0x24, 0x28, 0xe2, 0x14, 0xed,
	0x7c, 0x37, 0x9f, 0xef, 0xcc, 0xec, 0x8c, 0xe1, 0x69, 0x14, 0x6b, 0xa3, 0x79, 0x1c, 0xb9, 0x7c,
	0x36, 0xe4, 0x09, 0xc6, 0x33, 0x8c, 0xb9, 0x27, 0x52, 0x13, 0x30, 0xab, 0x90, 0x8e, 0x90, 0xf1,
	0x24, 0xd4, 0x2e, 0x8b, 0x23, 0x97, 0xcd, 0x86, 0x4e, 0xcf, 0xd7, 0xda, 0x0f, 0x91, 0x8b, 0x48,
	0x72, 0xa1, 0x94, 0x36, 0xc2, 0x48, 0xad, 0x92, 0xfc, 0xb6, 0x73, 0xb8, 0x50, 0xed, 0x69, 0x92,
	0x4e, 0x39, 0xde, 0x46, 0x66, 0x9e, 0x8b, 0xf4, 0x2d, 0xec, 0xdf, 0x48, 0x5f, 0x5d, 0xab, 0x31,
	0x7e, 0x4c, 0x31, 0x31, 0xc4, 0x81, 0xa6, 0xf4, 0x50, 0x19, 0x69, 0xe6, 0xdd, 0xda, 0x71, 0x6d,
	0xd0, 0x1a, 0x97, 0x67, 0x42, 0xa1, 0x9d, 0x26, 0x18, 0x8f, 0x30, 0x44, 0x5f, 0x18, 0xec, 0xd6,
	0xad, 0x5e, 0x89, 0x51, 0x06, 0x9d, 0x02, 0x98, 0x44, 0x5a, 0x25, 0x48, 0x7a, 0xd0, 0x12, 0xae,
	0xab, 0x53, 0x65, 0xae, 0xbd, 0x05, 0xf2, 0x3e, 0x40, 0xdf, 0x41, 0x7b, 0x74, 0x99, 0x9a, 0xa0,
	0xf0, 0xa7, 0xd0, 0x76, 0x75, 0x18, 0xa2, 0x9b, 0x95, 0x50, 0xfe, 0xa1, 0x12, 0xab, 0x12, 0xeb,
	0xab, 0xc4, 0x37, 0xd0, 0x7d, 0x8d, 0x26, 0x63, 0xea, 0x58, 0x7e, 0xce, 0x5b, 0x51, 0xd0, 0xff,
	0x9a, 0x0b, 0x79, 0x08, 0x0d, 0x11, 0x45, 0x25, 0x33, 0x3f, 0xd0, 0x6f, 0x75, 0x78, 0xb2, 0x06,
	0xb8, 0xa8, 0xee, 0x05, 0x3c, 0x08, 0x44, 0x52, 0x88, 0xe8, 0x5d, 0xe1, 0x54, 0xc7, 0x68, 0xd9,
	0xcd, 0xf1, 0x3a, 0x89, 0x7c, 0x80, 0x8e, 0xa8, 0xb0, 0xba, 0xf5, 0xe3, 0x9d, 0xc1, 0xde, 0xd9,
	0x4b, 0x56, 0x7d, 0x56, 0xb6, 0xd1, 0x94, 0x55, 0xc2, 0xe3, 0x15, 0x9c, 0x73, 0x03, 0xfb, 0x95,
	0x0b, 0x5b, 0xf5, 0xb4, 0x0f, 0x20, 0xca, 0x4c, 0x6d, 0x03, 0x9a, 0xe3, 0xa5, 0xc8, 0xd9, 0x8f,
	0x1d, 0x68, 0xd8, 0x87, 0x22, 0x1e, 0xec, 0xe6, 0x2f, 0x4c, 0x8e, 0x56, 0x33, 0xae, 0x8c, 0x92,
	0xd3, 0xdf, 0x24, 0xe7, 0x55, 0xd0, 0xc3, 0xaf, 0x3f, 0x7f, 0x7d, 0xaf, 0x3f, 0xa2, 0xff, 0x67,
	0x63, 0x6e, 0xe7, 0x9b, 0x27, 0xd2, 0x57, 0x52, 0x5d, 0xd4, 0x4e, 0xc9, 0x1d, 0x1c, 0xfc, 0x51,
	0x3f, 0x19, 0x6c, 0xd1, 0xa2, 0xdc, 0xfb, 0x64, 0xeb, 0x66, 0xd2, 0x03, 0x9b, 0xc6, 0x1e, 0x69,
	0x95, 0x69, 0x90, 0x00, 0x1a, 0x97, 0x61, 0xa8, 0x3f, 0x91, 0xde, 0x2a, 0x66, 0x79, 0x56, 0x9d,
	0xc7, 0x2c, 0x5f, 0x2d, 0x56, 0xac, 0x16, 0x7b, 0x95, 0xad, 0x16, 0x3d, 0xb1, 0xc4, 0x67, 0xb4,
	0x7f, 0x5f, 0xd8, 0xdd, 0x72, 0xb3, 0xbf, 0x70, 0x91, 0xd1, 0xb3, 0x32, 0xa7, 0xf0, 0xdf, 0x08,
	0xd5, 0xfc, 0x1f, 0x8d, 0x06, 0xd6, 0x88, 0xd2, 0xa3, 0x8d, 0x46, 0x1e, 0xaa, 0xf9, 0x45, 0xed,
	0xf4, 0xea, 0xfc, 0xfd, 0xd0, 0x97, 0x26, 0x48, 0x27, 0xcc, 0xd5, 0xb7, 0x7c, 0xe1, 0x55, 0xfc,
	0x3e, 0xf7, 0x35, 0x5f, 0xf3, 0xcd, 0x99, 0xec, 0xda, 0xe0, 0xf9, 0xef, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x66, 0xba, 0xec, 0x81, 0x91, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DAuthClient is the client API for DAuth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DAuthClient interface {
	//*
	// SignIn takes an email of user and returns an user account ID if the account is exists.
	// Otherwise, it creates new account using the email, and returns an ID of the newly created account.
	SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*SignInResponse, error)
	//*
	// GetAuthorization returns a list of the data authorization settings
	// which are done to collections of this app by given user.
	GetAuthorizations(ctx context.Context, in *GetAuthorizationsRequest, opts ...grpc.CallOption) (*GetAuthorizationsResponse, error)
	//*
	// Allow turns on user's data collection authorization settings for the given collection.
	//
	// Note that this is one-time only; Once you set an authorization to the collection,
	// then you cannot change it through this API. Only users can modify the settings.
	Allow(ctx context.Context, in *DAuthRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	//*
	// Deny turns off user's data collection authorization settings for the given collection.
	//
	// Note that this is one-time only; Once you set an authorization to the collection,
	// then you cannot change it through this API. Only users can modify the settings.
	Deny(ctx context.Context, in *DAuthRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type dAuthClient struct {
	cc *grpc.ClientConn
}

func NewDAuthClient(cc *grpc.ClientConn) DAuthClient {
	return &dAuthClient{cc}
}

func (c *dAuthClient) SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*SignInResponse, error) {
	out := new(SignInResponse)
	err := c.cc.Invoke(ctx, "/airbloc.rpc.v1.DAuth/SignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dAuthClient) GetAuthorizations(ctx context.Context, in *GetAuthorizationsRequest, opts ...grpc.CallOption) (*GetAuthorizationsResponse, error) {
	out := new(GetAuthorizationsResponse)
	err := c.cc.Invoke(ctx, "/airbloc.rpc.v1.DAuth/GetAuthorizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dAuthClient) Allow(ctx context.Context, in *DAuthRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/airbloc.rpc.v1.DAuth/Allow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dAuthClient) Deny(ctx context.Context, in *DAuthRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/airbloc.rpc.v1.DAuth/Deny", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DAuthServer is the server API for DAuth service.
type DAuthServer interface {
	//*
	// SignIn takes an email of user and returns an user account ID if the account is exists.
	// Otherwise, it creates new account using the email, and returns an ID of the newly created account.
	SignIn(context.Context, *SignInRequest) (*SignInResponse, error)
	//*
	// GetAuthorization returns a list of the data authorization settings
	// which are done to collections of this app by given user.
	GetAuthorizations(context.Context, *GetAuthorizationsRequest) (*GetAuthorizationsResponse, error)
	//*
	// Allow turns on user's data collection authorization settings for the given collection.
	//
	// Note that this is one-time only; Once you set an authorization to the collection,
	// then you cannot change it through this API. Only users can modify the settings.
	Allow(context.Context, *DAuthRequest) (*empty.Empty, error)
	//*
	// Deny turns off user's data collection authorization settings for the given collection.
	//
	// Note that this is one-time only; Once you set an authorization to the collection,
	// then you cannot change it through this API. Only users can modify the settings.
	Deny(context.Context, *DAuthRequest) (*empty.Empty, error)
}

func RegisterDAuthServer(s *grpc.Server, srv DAuthServer) {
	s.RegisterService(&_DAuth_serviceDesc, srv)
}

func _DAuth_SignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAuthServer).SignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.rpc.v1.DAuth/SignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAuthServer).SignIn(ctx, req.(*SignInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DAuth_GetAuthorizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuthorizationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAuthServer).GetAuthorizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.rpc.v1.DAuth/GetAuthorizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAuthServer).GetAuthorizations(ctx, req.(*GetAuthorizationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DAuth_Allow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAuthServer).Allow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.rpc.v1.DAuth/Allow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAuthServer).Allow(ctx, req.(*DAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DAuth_Deny_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DAuthServer).Deny(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.rpc.v1.DAuth/Deny",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DAuthServer).Deny(ctx, req.(*DAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DAuth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "airbloc.rpc.v1.DAuth",
	HandlerType: (*DAuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignIn",
			Handler:    _DAuth_SignIn_Handler,
		},
		{
			MethodName: "GetAuthorizations",
			Handler:    _DAuth_GetAuthorizations_Handler,
		},
		{
			MethodName: "Allow",
			Handler:    _DAuth_Allow_Handler,
		},
		{
			MethodName: "Deny",
			Handler:    _DAuth_Deny_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/rpc/v1/server/dauth.proto",
}
