// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/rpc/v1/userdelegate/account.proto

package userdelegate

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AccountGetResponse_Status int32

const (
	AccountGetResponse__NONE     AccountGetResponse_Status = 0
	AccountGetResponse_TEMPORARY AccountGetResponse_Status = 1
	AccountGetResponse_CREATED   AccountGetResponse_Status = 2
)

var AccountGetResponse_Status_name = map[int32]string{
	0: "_NONE",
	1: "TEMPORARY",
	2: "CREATED",
}

var AccountGetResponse_Status_value = map[string]int32{
	"_NONE":     0,
	"TEMPORARY": 1,
	"CREATED":   2,
}

func (x AccountGetResponse_Status) String() string {
	return proto.EnumName(AccountGetResponse_Status_name, int32(x))
}

func (AccountGetResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a2375b6aa3dfcbab, []int{3, 0}
}

type AccountCreateRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PasswordSignature    []byte   `protobuf:"bytes,2,opt,name=passwordSignature,proto3" json:"passwordSignature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountCreateRequest) Reset()         { *m = AccountCreateRequest{} }
func (m *AccountCreateRequest) String() string { return proto.CompactTextString(m) }
func (*AccountCreateRequest) ProtoMessage()    {}
func (*AccountCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2375b6aa3dfcbab, []int{0}
}

func (m *AccountCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountCreateRequest.Unmarshal(m, b)
}
func (m *AccountCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountCreateRequest.Marshal(b, m, deterministic)
}
func (m *AccountCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountCreateRequest.Merge(m, src)
}
func (m *AccountCreateRequest) XXX_Size() int {
	return xxx_messageInfo_AccountCreateRequest.Size(m)
}
func (m *AccountCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountCreateRequest proto.InternalMessageInfo

func (m *AccountCreateRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AccountCreateRequest) GetPasswordSignature() []byte {
	if m != nil {
		return m.PasswordSignature
	}
	return nil
}

type AccountCreateResponse struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountCreateResponse) Reset()         { *m = AccountCreateResponse{} }
func (m *AccountCreateResponse) String() string { return proto.CompactTextString(m) }
func (*AccountCreateResponse) ProtoMessage()    {}
func (*AccountCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2375b6aa3dfcbab, []int{1}
}

func (m *AccountCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountCreateResponse.Unmarshal(m, b)
}
func (m *AccountCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountCreateResponse.Marshal(b, m, deterministic)
}
func (m *AccountCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountCreateResponse.Merge(m, src)
}
func (m *AccountCreateResponse) XXX_Size() int {
	return xxx_messageInfo_AccountCreateResponse.Size(m)
}
func (m *AccountCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AccountCreateResponse proto.InternalMessageInfo

func (m *AccountCreateResponse) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type AccountGetRequest struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountGetRequest) Reset()         { *m = AccountGetRequest{} }
func (m *AccountGetRequest) String() string { return proto.CompactTextString(m) }
func (*AccountGetRequest) ProtoMessage()    {}
func (*AccountGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2375b6aa3dfcbab, []int{2}
}

func (m *AccountGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountGetRequest.Unmarshal(m, b)
}
func (m *AccountGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountGetRequest.Marshal(b, m, deterministic)
}
func (m *AccountGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetRequest.Merge(m, src)
}
func (m *AccountGetRequest) XXX_Size() int {
	return xxx_messageInfo_AccountGetRequest.Size(m)
}
func (m *AccountGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetRequest proto.InternalMessageInfo

func (m *AccountGetRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type AccountGetResponse struct {
	AccountId            string                    `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	OwnerAddress         string                    `protobuf:"bytes,2,opt,name=ownerAddress,proto3" json:"ownerAddress,omitempty"`
	Status               AccountGetResponse_Status `protobuf:"varint,3,opt,name=status,proto3,enum=airbloc.rpc.v1.AccountGetResponse_Status" json:"status,omitempty"`
	ProxyAddress         string                    `protobuf:"bytes,4,opt,name=proxyAddress,proto3" json:"proxyAddress,omitempty"`
	PasswordProof        []byte                    `protobuf:"bytes,5,opt,name=passwordProof,proto3" json:"passwordProof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AccountGetResponse) Reset()         { *m = AccountGetResponse{} }
func (m *AccountGetResponse) String() string { return proto.CompactTextString(m) }
func (*AccountGetResponse) ProtoMessage()    {}
func (*AccountGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2375b6aa3dfcbab, []int{3}
}

func (m *AccountGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountGetResponse.Unmarshal(m, b)
}
func (m *AccountGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountGetResponse.Marshal(b, m, deterministic)
}
func (m *AccountGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetResponse.Merge(m, src)
}
func (m *AccountGetResponse) XXX_Size() int {
	return xxx_messageInfo_AccountGetResponse.Size(m)
}
func (m *AccountGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetResponse proto.InternalMessageInfo

func (m *AccountGetResponse) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *AccountGetResponse) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *AccountGetResponse) GetStatus() AccountGetResponse_Status {
	if m != nil {
		return m.Status
	}
	return AccountGetResponse__NONE
}

func (m *AccountGetResponse) GetProxyAddress() string {
	if m != nil {
		return m.ProxyAddress
	}
	return ""
}

func (m *AccountGetResponse) GetPasswordProof() []byte {
	if m != nil {
		return m.PasswordProof
	}
	return nil
}

type AccountGetByIdentityRequest struct {
	Identity             string   `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountGetByIdentityRequest) Reset()         { *m = AccountGetByIdentityRequest{} }
func (m *AccountGetByIdentityRequest) String() string { return proto.CompactTextString(m) }
func (*AccountGetByIdentityRequest) ProtoMessage()    {}
func (*AccountGetByIdentityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2375b6aa3dfcbab, []int{4}
}

func (m *AccountGetByIdentityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountGetByIdentityRequest.Unmarshal(m, b)
}
func (m *AccountGetByIdentityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountGetByIdentityRequest.Marshal(b, m, deterministic)
}
func (m *AccountGetByIdentityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetByIdentityRequest.Merge(m, src)
}
func (m *AccountGetByIdentityRequest) XXX_Size() int {
	return xxx_messageInfo_AccountGetByIdentityRequest.Size(m)
}
func (m *AccountGetByIdentityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetByIdentityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetByIdentityRequest proto.InternalMessageInfo

func (m *AccountGetByIdentityRequest) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

type TestPasswordRequest struct {
	MessageHash          string   `protobuf:"bytes,1,opt,name=messageHash,proto3" json:"messageHash,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestPasswordRequest) Reset()         { *m = TestPasswordRequest{} }
func (m *TestPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*TestPasswordRequest) ProtoMessage()    {}
func (*TestPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2375b6aa3dfcbab, []int{5}
}

func (m *TestPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestPasswordRequest.Unmarshal(m, b)
}
func (m *TestPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestPasswordRequest.Marshal(b, m, deterministic)
}
func (m *TestPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestPasswordRequest.Merge(m, src)
}
func (m *TestPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_TestPasswordRequest.Size(m)
}
func (m *TestPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestPasswordRequest proto.InternalMessageInfo

func (m *TestPasswordRequest) GetMessageHash() string {
	if m != nil {
		return m.MessageHash
	}
	return ""
}

func (m *TestPasswordRequest) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type TestPasswordResponse struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestPasswordResponse) Reset()         { *m = TestPasswordResponse{} }
func (m *TestPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*TestPasswordResponse) ProtoMessage()    {}
func (*TestPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2375b6aa3dfcbab, []int{6}
}

func (m *TestPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestPasswordResponse.Unmarshal(m, b)
}
func (m *TestPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestPasswordResponse.Marshal(b, m, deterministic)
}
func (m *TestPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestPasswordResponse.Merge(m, src)
}
func (m *TestPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_TestPasswordResponse.Size(m)
}
func (m *TestPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestPasswordResponse proto.InternalMessageInfo

func (m *TestPasswordResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func init() {
	proto.RegisterEnum("airbloc.rpc.v1.AccountGetResponse_Status", AccountGetResponse_Status_name, AccountGetResponse_Status_value)
	proto.RegisterType((*AccountCreateRequest)(nil), "airbloc.rpc.v1.AccountCreateRequest")
	proto.RegisterType((*AccountCreateResponse)(nil), "airbloc.rpc.v1.AccountCreateResponse")
	proto.RegisterType((*AccountGetRequest)(nil), "airbloc.rpc.v1.AccountGetRequest")
	proto.RegisterType((*AccountGetResponse)(nil), "airbloc.rpc.v1.AccountGetResponse")
	proto.RegisterType((*AccountGetByIdentityRequest)(nil), "airbloc.rpc.v1.AccountGetByIdentityRequest")
	proto.RegisterType((*TestPasswordRequest)(nil), "airbloc.rpc.v1.TestPasswordRequest")
	proto.RegisterType((*TestPasswordResponse)(nil), "airbloc.rpc.v1.TestPasswordResponse")
}

func init() {
	proto.RegisterFile("proto/rpc/v1/userdelegate/account.proto", fileDescriptor_a2375b6aa3dfcbab)
}

var fileDescriptor_a2375b6aa3dfcbab = []byte{
	// 491 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0xa5, 0x19, 0x4b, 0xd7, 0xbb, 0x76, 0xea, 0xcc, 0x40, 0x51, 0xe1, 0xa1, 0x98, 0x22, 0x8a,
	0x80, 0x44, 0x1d, 0x42, 0x68, 0x8f, 0xd9, 0xa8, 0xc6, 0x24, 0xd8, 0xaa, 0xac, 0x7b, 0x18, 0x0f,
	0x80, 0x9b, 0x5c, 0xb2, 0x48, 0x5b, 0x1c, 0x6c, 0x67, 0x5b, 0xff, 0x83, 0xbf, 0xe4, 0x27, 0xd0,
	0x12, 0x87, 0x36, 0xed, 0xda, 0xed, 0x29, 0xf2, 0xf1, 0x3d, 0xf7, 0x5c, 0x9f, 0x73, 0x15, 0x78,
	0x95, 0x08, 0xae, 0xb8, 0x23, 0x12, 0xdf, 0xb9, 0xec, 0x39, 0xa9, 0x44, 0x11, 0xe0, 0x39, 0x86,
	0x4c, 0xa1, 0xc3, 0x7c, 0x9f, 0xa7, 0xb1, 0xb2, 0xb3, 0x0a, 0xb2, 0xc1, 0x22, 0x31, 0x3a, 0xe7,
	0xbe, 0x2d, 0x12, 0xdf, 0xbe, 0xec, 0xd1, 0xef, 0xb0, 0xe5, 0xe6, 0x05, 0x7b, 0x02, 0x99, 0x42,
	0x0f, 0x7f, 0xa7, 0x28, 0x15, 0xb1, 0xa0, 0xca, 0x82, 0x40, 0xa0, 0x94, 0x56, 0xa5, 0x5d, 0xe9,
	0xd6, 0xbc, 0xe2, 0x48, 0xde, 0xc2, 0x66, 0xc2, 0xa4, 0xbc, 0xe2, 0x22, 0x38, 0x8e, 0xc2, 0x98,
	0xa9, 0x54, 0xa0, 0x65, 0xb4, 0x2b, 0xdd, 0xba, 0x37, 0x7f, 0x41, 0x3f, 0xc0, 0xe3, 0x99, 0xfe,
	0x32, 0xe1, 0xb1, 0x44, 0xf2, 0x0c, 0x6a, 0x7a, 0xb2, 0x83, 0x40, 0x4b, 0x4c, 0x00, 0xda, 0x83,
	0x4d, 0x4d, 0xdb, 0x47, 0x55, 0xcc, 0xb4, 0x9c, 0xf2, 0xc7, 0x00, 0x32, 0xcd, 0xb9, 0x8f, 0x0e,
	0xa1, 0x50, 0xe7, 0x57, 0x31, 0x0a, 0x57, 0xbf, 0xd5, 0xc8, 0x0a, 0x4a, 0x18, 0x71, 0xc1, 0x94,
	0x8a, 0xa9, 0x54, 0x5a, 0x2b, 0xed, 0x4a, 0x77, 0x63, 0xfb, 0xb5, 0x5d, 0xf6, 0xd0, 0x9e, 0x57,
	0xb5, 0x8f, 0x33, 0x82, 0xa7, 0x89, 0x37, 0x32, 0x89, 0xe0, 0xd7, 0xe3, 0x42, 0xe6, 0x61, 0x2e,
	0x33, 0x8d, 0x91, 0x0e, 0x34, 0x0a, 0xfb, 0x06, 0x82, 0xf3, 0x5f, 0xd6, 0x6a, 0xe6, 0x69, 0x19,
	0xa4, 0x0e, 0x98, 0x79, 0x6f, 0x52, 0x83, 0xd5, 0x1f, 0x87, 0x47, 0x87, 0xfd, 0xe6, 0x03, 0xd2,
	0x80, 0xda, 0xb0, 0xff, 0x75, 0x70, 0xe4, 0xb9, 0xde, 0x69, 0xb3, 0x42, 0xd6, 0xa1, 0xba, 0xe7,
	0xf5, 0xdd, 0x61, 0xff, 0x53, 0xd3, 0xa0, 0x3b, 0xf0, 0x74, 0x32, 0xdf, 0xee, 0xf8, 0x20, 0xc0,
	0x58, 0x45, 0x6a, 0x5c, 0x78, 0xda, 0x82, 0xb5, 0x48, 0x43, 0xda, 0x9d, 0xff, 0x67, 0x7a, 0x02,
	0x8f, 0x86, 0x28, 0xd5, 0x40, 0x0f, 0x50, 0x50, 0xda, 0xb0, 0x7e, 0x81, 0x52, 0xb2, 0x10, 0x3f,
	0x33, 0x79, 0xa6, 0x59, 0xd3, 0xd0, 0x8d, 0xe7, 0x72, 0x66, 0x35, 0x26, 0x00, 0xb5, 0x61, 0xab,
	0xdc, 0x56, 0x27, 0xf5, 0x04, 0x4c, 0xbc, 0x8e, 0xa4, 0xca, 0x37, 0x6e, 0xcd, 0xd3, 0xa7, 0xed,
	0xbf, 0x06, 0x54, 0xf5, 0x13, 0xc8, 0x09, 0x98, 0xf9, 0x1e, 0x91, 0xce, 0x82, 0x14, 0x4a, 0x6b,
	0xdc, 0x7a, 0x79, 0x47, 0x95, 0x96, 0xfe, 0x02, 0x2b, 0xfb, 0xa8, 0xc8, 0xf3, 0x65, 0xc9, 0xe6,
	0x0d, 0xe9, 0xdd, 0xe1, 0x93, 0x9f, 0xd0, 0x28, 0x79, 0x4d, 0xde, 0x2c, 0x26, 0xcd, 0x25, 0x72,
	0x2f, 0x85, 0x53, 0xa8, 0x4f, 0x5b, 0x48, 0x5e, 0xcc, 0x72, 0x6e, 0xc9, 0xad, 0xd5, 0x59, 0x5e,
	0x94, 0xb7, 0xde, 0xdd, 0xf9, 0xf6, 0x31, 0x8c, 0xd4, 0x59, 0x3a, 0xb2, 0x7d, 0x7e, 0xe1, 0x68,
	0x46, 0xf1, 0x7d, 0x17, 0x72, 0x67, 0xe1, 0x9f, 0x66, 0x64, 0x66, 0x57, 0xef, 0xff, 0x05, 0x00,
	0x00, 0xff, 0xff, 0x6a, 0xfe, 0xd1, 0x61, 0x8d, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountClient is the client API for Account service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountClient interface {
	Create(ctx context.Context, in *AccountCreateRequest, opts ...grpc.CallOption) (*AccountCreateResponse, error)
	Get(ctx context.Context, in *AccountGetRequest, opts ...grpc.CallOption) (*AccountGetResponse, error)
	GetByIdentity(ctx context.Context, in *AccountGetByIdentityRequest, opts ...grpc.CallOption) (*AccountGetResponse, error)
	TestPassword(ctx context.Context, in *TestPasswordRequest, opts ...grpc.CallOption) (*TestPasswordResponse, error)
}

type accountClient struct {
	cc *grpc.ClientConn
}

func NewAccountClient(cc *grpc.ClientConn) AccountClient {
	return &accountClient{cc}
}

func (c *accountClient) Create(ctx context.Context, in *AccountCreateRequest, opts ...grpc.CallOption) (*AccountCreateResponse, error) {
	out := new(AccountCreateResponse)
	err := c.cc.Invoke(ctx, "/airbloc.rpc.v1.Account/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Get(ctx context.Context, in *AccountGetRequest, opts ...grpc.CallOption) (*AccountGetResponse, error) {
	out := new(AccountGetResponse)
	err := c.cc.Invoke(ctx, "/airbloc.rpc.v1.Account/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) GetByIdentity(ctx context.Context, in *AccountGetByIdentityRequest, opts ...grpc.CallOption) (*AccountGetResponse, error) {
	out := new(AccountGetResponse)
	err := c.cc.Invoke(ctx, "/airbloc.rpc.v1.Account/GetByIdentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) TestPassword(ctx context.Context, in *TestPasswordRequest, opts ...grpc.CallOption) (*TestPasswordResponse, error) {
	out := new(TestPasswordResponse)
	err := c.cc.Invoke(ctx, "/airbloc.rpc.v1.Account/TestPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServer is the server API for Account service.
type AccountServer interface {
	Create(context.Context, *AccountCreateRequest) (*AccountCreateResponse, error)
	Get(context.Context, *AccountGetRequest) (*AccountGetResponse, error)
	GetByIdentity(context.Context, *AccountGetByIdentityRequest) (*AccountGetResponse, error)
	TestPassword(context.Context, *TestPasswordRequest) (*TestPasswordResponse, error)
}

func RegisterAccountServer(s *grpc.Server, srv AccountServer) {
	s.RegisterService(&_Account_serviceDesc, srv)
}

func _Account_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.rpc.v1.Account/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).Create(ctx, req.(*AccountCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.rpc.v1.Account/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).Get(ctx, req.(*AccountGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_GetByIdentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountGetByIdentityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).GetByIdentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.rpc.v1.Account/GetByIdentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).GetByIdentity(ctx, req.(*AccountGetByIdentityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_TestPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).TestPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/airbloc.rpc.v1.Account/TestPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).TestPassword(ctx, req.(*TestPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Account_serviceDesc = grpc.ServiceDesc{
	ServiceName: "airbloc.rpc.v1.Account",
	HandlerType: (*AccountServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Account_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Account_Get_Handler,
		},
		{
			MethodName: "GetByIdentity",
			Handler:    _Account_GetByIdentity_Handler,
		},
		{
			MethodName: "TestPassword",
			Handler:    _Account_TestPassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/rpc/v1/userdelegate/account.proto",
}
